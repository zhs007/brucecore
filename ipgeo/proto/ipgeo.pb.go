// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ipgeo.proto

package ipgeopb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// IPGeo - ip geolocation
type IPGeo struct {
	Latitude             float32  `protobuf:"fixed32,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude            float32  `protobuf:"fixed32,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Organization         string   `protobuf:"bytes,3,opt,name=organization,proto3" json:"organization,omitempty"`
	Asn                  string   `protobuf:"bytes,4,opt,name=asn,proto3" json:"asn,omitempty"`
	Continent            string   `protobuf:"bytes,5,opt,name=continent,proto3" json:"continent,omitempty"`
	Country              string   `protobuf:"bytes,6,opt,name=country,proto3" json:"country,omitempty"`
	Region               string   `protobuf:"bytes,7,opt,name=region,proto3" json:"region,omitempty"`
	City                 string   `protobuf:"bytes,8,opt,name=city,proto3" json:"city,omitempty"`
	Hostname             string   `protobuf:"bytes,9,opt,name=hostname,proto3" json:"hostname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IPGeo) Reset()         { *m = IPGeo{} }
func (m *IPGeo) String() string { return proto.CompactTextString(m) }
func (*IPGeo) ProtoMessage()    {}
func (*IPGeo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ipgeo_e34be2c0a1722973, []int{0}
}
func (m *IPGeo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IPGeo.Unmarshal(m, b)
}
func (m *IPGeo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IPGeo.Marshal(b, m, deterministic)
}
func (dst *IPGeo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IPGeo.Merge(dst, src)
}
func (m *IPGeo) XXX_Size() int {
	return xxx_messageInfo_IPGeo.Size(m)
}
func (m *IPGeo) XXX_DiscardUnknown() {
	xxx_messageInfo_IPGeo.DiscardUnknown(m)
}

var xxx_messageInfo_IPGeo proto.InternalMessageInfo

func (m *IPGeo) GetLatitude() float32 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *IPGeo) GetLongitude() float32 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *IPGeo) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *IPGeo) GetAsn() string {
	if m != nil {
		return m.Asn
	}
	return ""
}

func (m *IPGeo) GetContinent() string {
	if m != nil {
		return m.Continent
	}
	return ""
}

func (m *IPGeo) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *IPGeo) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *IPGeo) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *IPGeo) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func init() {
	proto.RegisterType((*IPGeo)(nil), "ipgeopb.IPGeo")
}

func init() { proto.RegisterFile("ipgeo.proto", fileDescriptor_ipgeo_e34be2c0a1722973) }

var fileDescriptor_ipgeo_e34be2c0a1722973 = []byte{
	// 200 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0x3d, 0x4e, 0xc4, 0x30,
	0x10, 0x46, 0xe5, 0xfd, 0x49, 0x36, 0x03, 0x05, 0x9a, 0x02, 0x8d, 0x10, 0xc5, 0x6a, 0xab, 0xad,
	0x68, 0x38, 0x04, 0xa2, 0x43, 0x7b, 0x03, 0x27, 0x58, 0xc6, 0x52, 0x98, 0x89, 0x9c, 0x49, 0x11,
	0x2e, 0x4e, 0x8b, 0x3c, 0x40, 0xa2, 0xed, 0xbe, 0xf7, 0x9e, 0x64, 0xcb, 0x86, 0x9b, 0x34, 0xc4,
	0x20, 0x4f, 0x43, 0x16, 0x15, 0xac, 0x0d, 0x86, 0xf6, 0xf4, 0xed, 0x60, 0xff, 0xfa, 0xf6, 0x12,
	0x04, 0x1f, 0xe0, 0xd0, 0x7b, 0x4d, 0x3a, 0xbd, 0x07, 0x72, 0x47, 0x77, 0xde, 0x5c, 0x16, 0xc6,
	0x47, 0x68, 0x7a, 0xe1, 0xf8, 0x1b, 0x37, 0x16, 0x57, 0x81, 0x27, 0xb8, 0x95, 0x1c, 0x3d, 0xa7,
	0x2f, 0xaf, 0x49, 0x98, 0xb6, 0x47, 0x77, 0x6e, 0x2e, 0x57, 0x0e, 0xef, 0x60, 0xeb, 0x47, 0xa6,
	0x9d, 0xa5, 0x32, 0xcb, 0x99, 0x9d, 0xb0, 0x26, 0x0e, 0xac, 0xb4, 0x37, 0xbf, 0x0a, 0x24, 0xa8,
	0x3b, 0x99, 0x58, 0xf3, 0x4c, 0x95, 0xb5, 0x7f, 0xc4, 0x7b, 0xa8, 0x72, 0x88, 0xe5, 0x9e, 0xda,
	0xc2, 0x1f, 0x21, 0xc2, 0xae, 0x4b, 0x3a, 0xd3, 0xc1, 0xac, 0xed, 0xf2, 0xa6, 0x0f, 0x19, 0x95,
	0xfd, 0x67, 0xa0, 0xc6, 0xfc, 0xc2, 0x6d, 0x65, 0x3f, 0xf1, 0xfc, 0x13, 0x00, 0x00, 0xff, 0xff,
	0x5e, 0x3b, 0xde, 0x6a, 0x18, 0x01, 0x00, 0x00,
}
